@page
@{
    ViewData["Title"] = "Home page";
}

<h1>Index</h1>

<p>
    <a href="/Create">Create New</a>
</p>

<input type="text" id="searchInput" onkeyup="searchTable()" placeholder="Search by equipment...">

<table class="table" id="carTable">
    <thead>
        <tr>
            <th>Short Name</th>
            <th>Purpose</th>
            <th>Vehicle Make</th>
            <th>License</th>
            <th>Tracker Device Id</th>
            <th>Equipment</th>
            <th></th>
        </tr>
    </thead>
    <tbody id="carTableBody">
        <!-- Table body will be populated dynamically by JavaScript -->
    </tbody>
</table>

<script>
    async function fetchData() {
        const response = await fetch('https://localhost:44391/cars');
        const data = await response.json();
        return data;
    }

    async function fetchEnumNames() {
        const response = await fetch('https://localhost:44391/carPurposeEnumValues');
        const data = await response.json();
        return data;
    }

    async function updateTable() {
        const cars = await fetchData();
        const enumNames = await fetchEnumNames();
        const tbody = document.getElementById('carTableBody');

        tbody.innerHTML = '';

        cars.forEach(car => {
            const row = document.createElement('tr');
            row.innerHTML = `
                    <td>${car.shortName}</td>
                    <td>${enumNames[car.purpose]}</td>
                    <td>${car.vehicleMake}</td>
                    <td>${car.license}</td>
                    <td>${car.trackerDeviceId}</td>
                    <td>${car.description}</td>
                    <td>
                        <a href="/Edit?id=${car.id}">Edit</a>
                        <button onclick="deleteCar(${car.id})">Delete</button>
                    </td>
                `;
            tbody.appendChild(row);
        });
    }

    async function deleteCar(id) {
        try {
            const response = await fetch(`https://localhost:44391/DeleteCar?id=${id}`, {
                method: 'DELETE'
            });
            if (response.ok) {
                console.log('Car deleted successfully');
            } else {
                console.error('Failed to delete car');
            }
        } catch (error) {
            console.error('Error:', error);
        }
        updateTable();
    }

    async function editCar(id) {
        const editUrl = `https://localhost:44391/Edit?id=${id}`;
        window.location.href = editUrl;
    }

    function searchTable() {
        const input = document.getElementById('searchInput');
        const filter = input.value.toUpperCase();
        const rows = document.querySelectorAll('#carTable tbody tr');

        rows.forEach(row => {
            const descriptionCell = row.getElementsByTagName('td')[5];
            if (descriptionCell) {
                const textValue = descriptionCell.textContent || descriptionCell.innerText;
                if (textValue.toUpperCase().indexOf(filter) > -1) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            }
        });
    }

    window.onload = () => {
        updateTable(); 
        document.getElementById('searchInput').addEventListener('keyup', searchTable); // Add event listener for search input
    };
</script>